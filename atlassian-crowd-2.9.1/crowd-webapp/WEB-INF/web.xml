<?xml version="1.0" encoding="UTF-8"?>
<web-app id="CrowdWebApp" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>Atlassian Crowd - Single Sign-On, Simplified.</display-name>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:/applicationContext-CrowdEncryption.xml,
            classpath:/applicationContext-CrowdDAO.xml,
            classpath:/applicationContext-CrowdPersistence.xml,
            classpath:/applicationContext-CrowdPasswordConstraints.xml,
            classpath:/applicationContext-CrowdManagers.xml,
            classpath:/applicationContext-CrowdScheduler.xml,
            classpath:/applicationContext-CrowdLDAP.xml,
            classpath:/applicationContext-CrowdUtils.xml,
            classpath:/applicationContext-CrowdImporter.xml,
            classpath:/applicationContext-CrowdMappers.xml,
            classpath:/applicationContext-CrowdPlugins.xml,
            classpath:/applicationContext-CrowdServer.xml,
            classpath:/applicationContext-OsgiDarkFeatureManager.xml,
            classpath:/applicationContext-CrowdUpgrader.xml,
            classpath:/applicationContext-CrowdWeb.xml,
            classpath:/applicationContext-CrowdSecurity.xml,
            classpath:/applicationContext-CrowdConsoleClient.xml
        </param-value>
    </context-param>

    <!-- ============ Filters ============== -->
    <!-- Note: this filter should be kept first in the list -->
    <filter>
        <filter-name>http-context</filter-name>
        <filter-class>com.atlassian.crowd.plugin.web.filter.HttpContextFilter</filter-class>
    </filter>
    <filter>
        <filter-name>johnson-soap</filter-name>
        <filter-class>com.atlassian.johnson.filters.JohnsonSoapFilter</filter-class>
    </filter>

    <filter>
        <filter-name>johnson</filter-name>
        <filter-class>com.atlassian.johnson.filters.JohnsonFilter</filter-class>
    </filter>

    <filter>
        <filter-name>licencecheck</filter-name>
        <filter-class>com.atlassian.crowd.console.filter.CrowdDelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>licenceFilter</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>charsetFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>caching</filter-name>
        <filter-class>com.atlassian.crowd.console.filter.CrowdCachingFilter</filter-class>
    </filter>

    <filter>
        <filter-name>block-opensocial-request</filter-name>
        <filter-class>com.atlassian.crowd.security.BlockOpenSocialRequestFilter</filter-class>
    </filter>

    <!-- this filter is used to rewrite through the /s/* filter to add caching headers. see: urlrewrite.xml -->
    <filter>
        <filter-name>url-rewrite</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-after-encoding-request</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>after-encoding</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>REQUEST</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-after-encoding-forward</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>after-encoding</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>FORWARD</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-after-encoding-include</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>after-encoding</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>INCLUDE</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-after-encoding-error</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>after-encoding</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>ERROR</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-login-request</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-login</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>REQUEST</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-login-forward</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-login</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>FORWARD</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-login-include</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-login</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>INCLUDE</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-login-error</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-login</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>ERROR</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>struts2-prepare</filter-name>
        <filter-class>com.atlassian.crowd.console.filter.CrowdBootstrapAwareStrutsPrepareFilter</filter-class>
    </filter>

    <filter>
        <filter-name>security-check</filter-name>
        <filter-class>com.atlassian.crowd.console.filter.CrowdDelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>springSecurityFilterChain</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-decoration-request</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-decoration</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>REQUEST</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-decoration-forward</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-decoration</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>FORWARD</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-decoration-include</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-decoration</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>INCLUDE</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-decoration-error</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-decoration</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>ERROR</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.atlassian.crowd.plugin.sitemesh.CrowdSiteMeshFilter</filter-class>
    </filter>

    <filter>
        <filter-name>struts2-execute</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
    </filter>

    <filter>
        <filter-name>request-cache</filter-name>
        <filter-class>com.atlassian.crowd.plugin.web.filter.RequestCacheThreadLocalFilter</filter-class>
    </filter>

    <filter>
        <filter-name>open-session-in-view</filter-name>
        <filter-class>com.atlassian.crowd.console.filter.CrowdOpenSessionInViewFilter</filter-class>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-dispatch-request</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-dispatch</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>REQUEST</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-dispatch-forward</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-dispatch</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>FORWARD</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-dispatch-include</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-dispatch</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>INCLUDE</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>filter-plugin-dispatcher-before-dispatch-error</filter-name>
        <filter-class>com.atlassian.plugin.servlet.filter.ServletFilterModuleContainerFilter</filter-class>
        <init-param>
            <param-name>location</param-name>
            <param-value>before-dispatch</param-value>
        </init-param>
        <init-param>
           <param-name>dispatcher</param-name>
           <param-value>ERROR</param-value>
       </init-param>
    </filter>

    <filter>
        <filter-name>preventLoginCsrfFilter</filter-name>
        <filter-class>com.atlassian.crowd.console.filter.CrowdDelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <!-- ============ Filter Mappings ============== -->
    <!-- Note: this filter should be kept first in the list -->
    <filter-mapping>
        <filter-name>http-context</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>charsetFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>caching</filter-name>
        <url-pattern>*.ftl</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>caching</filter-name>
        <url-pattern>*.action</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>caching</filter-name>
        <url-pattern>/download/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>caching</filter-name>
        <url-pattern>/plugins/servlet/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>caching</filter-name>
        <url-pattern>/s/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>block-opensocial-request</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-after-encoding-request</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-after-encoding-forward</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-after-encoding-include</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-after-encoding-error</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>request-cache</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>url-rewrite</filter-name>
        <url-pattern>/s/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>open-session-in-view</filter-name>
        <url-pattern>*.action</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>open-session-in-view</filter-name>
        <url-pattern>/services/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>open-session-in-view</filter-name>
        <url-pattern>/plugins/servlet/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>open-session-in-view</filter-name>
        <url-pattern>*.ftl</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>open-session-in-view</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>open-session-in-view</filter-name>
        <url-pattern>/console/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>open-session-in-view</filter-name>
        <url-pattern>/rest/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>johnson-soap</filter-name>
        <url-pattern>/services/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>johnson</filter-name>
        <url-pattern>/console/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>licencecheck</filter-name>
        <url-pattern>/console/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-login-request</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-login-forward</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-login-include</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-login-error</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>preventLoginCsrfFilter</filter-name>
        <url-pattern>/console/j_security_check</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>security-check</filter-name>
        <url-pattern>/console/*</url-pattern>
        <url-pattern>/plugins/servlet/*</url-pattern>
        <url-pattern>/rest/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-decoration-request</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-decoration-forward</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-decoration-include</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-decoration-error</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/console/*</url-pattern>
        <url-pattern>/plugins/servlet/*</url-pattern>
        <url-pattern>/index.jsp</url-pattern>
        <url-pattern>/about.jsp</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>*.action</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-dispatch-request</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-dispatch-forward</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-dispatch-include</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>filter-plugin-dispatcher-before-dispatch-error</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <!-- ============ Listeners ============== -->
    <listener>
        <listener-class>com.atlassian.johnson.context.JohnsonContextListener</listener-class>
    </listener>

    <!-- Loads the Bootstrap context for minimal app startup -->
    <listener>
        <listener-class>com.atlassian.crowd.console.listener.BootstrapLoaderListener</listener-class>
    </listener>

    <!-- Loads the Spring servlet context if / when the app has been setup -->
    <listener>
        <listener-class>com.atlassian.config.bootstrap.BootstrappedContextLoaderListener</listener-class>
    </listener>

    <!-- Startup runner for Crowd (runs upgrade/migration if required) -->
    <listener>
        <listener-class>com.atlassian.crowd.console.listener.StartupListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>xfire</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:/xfire-servlet.xml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>xfire</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>servlet-module-container-servlet</servlet-name>
        <servlet-class>com.atlassian.plugin.servlet.ServletModuleContainerServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>servlet-module-container-servlet</servlet-name>
        <url-pattern>/plugins/servlet/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>file-server</servlet-name>
        <servlet-class>com.atlassian.crowd.plugin.servlet.FileServerServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>file-server</servlet-name>
        <url-pattern>/download/*</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <error-page>
        <error-code>500</error-code>
        <location>/console/500.jsp</location>
    </error-page>

    <jsp-config>
        <taglib>
            <taglib-uri>/WEB-INF/crowd.tld</taglib-uri>
            <taglib-location>/WEB-INF/crowd.tld</taglib-location>
        </taglib>
    </jsp-config>

</web-app>
