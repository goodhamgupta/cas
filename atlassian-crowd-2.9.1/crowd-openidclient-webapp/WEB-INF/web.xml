<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <!-- Context Configuration locations for Spring XML files -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:/applicationContext-OpenIDClient.xml</param-value>
    </context-param>

    <filter>
        <filter-name>verify-openid-filter</filter-name>
        <filter-class>com.atlassian.crowd.openid.client.filter.VerifyOpenIDAuthenticationFilter</filter-class>
    </filter>

    <filter>
        <filter-name>struts2-prepare</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
    </filter>

    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
    </filter>

    <filter>
        <filter-name>struts2-execute</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
    </filter>

    <filter>
        <filter-name>struts2-prepare-and-execute</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>verify-openid-filter</filter-name>
        <url-pattern>/secure/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>*.action</url-pattern>
    </filter-mapping>

    <!-- Only for when an action ends up forwarding to another action, to avoid repeating the action
          that was set by the original prepare filter. -->
    <filter-mapping>
        <filter-name>struts2-prepare-and-execute</filter-name>
        <url-pattern>*.action</url-pattern>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.apache.struts2.dispatcher.ng.listener.StrutsListener</listener-class>
    </listener>

    <!-- OpenID Client Servlet -->

    <servlet>
        <servlet-name>OpenIDClientServlet</servlet-name>
        <servlet-class>com.atlassian.crowd.openid.client.servlet.OpenIDClientServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>OpenIDClientServlet</servlet-name>
        <url-pattern>/login.openid</url-pattern>
    </servlet-mapping>


</web-app>
